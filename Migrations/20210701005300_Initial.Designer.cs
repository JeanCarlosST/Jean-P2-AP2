// <auto-generated />
using System;
using Jean_P2_AP2.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Jean_P2_AP2.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20210701005300_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("Jean_P2_AP2.Models.Clientes", b =>
                {
                    b.Property<int>("ClienteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombres")
                        .HasColumnType("TEXT");

                    b.HasKey("ClienteID");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            ClienteID = 1,
                            Nombres = "FERRETERIA GAMA"
                        },
                        new
                        {
                            ClienteID = 2,
                            Nombres = "AVALON DISCO"
                        },
                        new
                        {
                            ClienteID = 3,
                            Nombres = "PRESTAMOS CEFIPROD"
                        });
                });

            modelBuilder.Entity("Jean_P2_AP2.Models.Cobros", b =>
                {
                    b.Property<int>("CobroID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClienteID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("Observaciones")
                        .HasColumnType("TEXT");

                    b.HasKey("CobroID");

                    b.ToTable("Cobros");
                });

            modelBuilder.Entity("Jean_P2_AP2.Models.CobrosDetalle", b =>
                {
                    b.Property<int>("CobroDetalleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("Cobrado")
                        .HasColumnType("REAL");

                    b.Property<int>("CobroID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VentaID")
                        .HasColumnType("INTEGER");

                    b.HasKey("CobroDetalleID");

                    b.HasIndex("CobroID");

                    b.ToTable("CobrosDetalle");
                });

            modelBuilder.Entity("Jean_P2_AP2.Models.Ventas", b =>
                {
                    b.Property<int>("VentaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Balance")
                        .HasColumnType("REAL");

                    b.Property<int>("ClienteID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<double>("Monto")
                        .HasColumnType("REAL");

                    b.HasKey("VentaID");

                    b.HasIndex("ClienteID");

                    b.ToTable("Ventas");

                    b.HasData(
                        new
                        {
                            VentaID = 1,
                            Balance = 1000.0,
                            ClienteID = 1,
                            Fecha = new DateTime(2020, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Monto = 1000.0
                        },
                        new
                        {
                            VentaID = 2,
                            Balance = 800.0,
                            ClienteID = 1,
                            Fecha = new DateTime(2020, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Monto = 900.0
                        },
                        new
                        {
                            VentaID = 3,
                            Balance = 2000.0,
                            ClienteID = 2,
                            Fecha = new DateTime(2020, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Monto = 2000.0
                        },
                        new
                        {
                            VentaID = 4,
                            Balance = 1800.0,
                            ClienteID = 2,
                            Fecha = new DateTime(2020, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Monto = 1900.0
                        },
                        new
                        {
                            VentaID = 5,
                            Balance = 3000.0,
                            ClienteID = 3,
                            Fecha = new DateTime(2020, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Monto = 3000.0
                        },
                        new
                        {
                            VentaID = 6,
                            Balance = 1900.0,
                            ClienteID = 3,
                            Fecha = new DateTime(2020, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Monto = 2900.0
                        });
                });

            modelBuilder.Entity("Jean_P2_AP2.Models.CobrosDetalle", b =>
                {
                    b.HasOne("Jean_P2_AP2.Models.Cobros", null)
                        .WithMany("Detalle")
                        .HasForeignKey("CobroID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jean_P2_AP2.Models.Ventas", b =>
                {
                    b.HasOne("Jean_P2_AP2.Models.Clientes", null)
                        .WithMany("Ventas")
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Jean_P2_AP2.Models.Clientes", b =>
                {
                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("Jean_P2_AP2.Models.Cobros", b =>
                {
                    b.Navigation("Detalle");
                });
#pragma warning restore 612, 618
        }
    }
}
